[package]
name = "quantette"
version = "0.3.0"
edition = "2024"
rust-version = "1.90"
description = "Fast and high quality image quantization and palette generation."
repository = "https://github.com/IanManske/quantette"
license = "MIT OR Apache-2.0"
include = ["src"]
keywords = ["quantization", "palette", "color", "dither", "kmeans"]
categories = ["multimedia::images"]

[features]
default = ["kmeans", "threads", "image"]

# Exposes kmeans as an alternative quatization method
# which gives higher quality results but is slower to run.
kmeans = ["rand", "rand_xoshiro"]

# Enable use of the Rust std lib
std = ["wide/std", "num-traits/std"]

# Exposes parallel versions of most algorithms.
threads = ["rayon", "std"]

# Enables integration with the `image` crate.
image = ["dep:image", "std"]

[dependencies]
bitvec = { version = "1.0.1", default-features = false, features = ["alloc"] }
bytemuck = { version = "1.24.0", features = ["derive", "min_const_generics", "extern_crate_alloc"] }
num-traits = { version = "0.2.16", default-features = false, features = [
  "libm",
] }
ordered-float = { version = "5.1.0", default-features = false }
libm = { version = "0.2.11", default-features = false }
wide = { version = "0.8.0", default-features = false }
palette = { version = "0.7.6", default-features = false, features = [
  "alloc",
  "libm",
  "bytemuck"
] }
image = { version = "0.25.0", default-features = false, optional = true }
rayon = { version = "1.10.0", optional = true }
rand = { version = "0.9.2", default-features = false, features = [
  "alloc",
], optional = true }
rand_xoshiro = { version = "0.7.0", optional = true }
ref-cast = "1.0.23"

# for minimal-versions
[target.'cfg(any())'.dependencies]
tap = { version = "1.0.1", optional = true } # needed for bitvec

[dev-dependencies]
criterion = "0.7.0"
image = { version = "0.25.0", default-features = false, features = [
  "jpeg",
  "png",
] }
clap = { version = "4.3.0", features = ["derive"] }
rgb = { version = "0.8.36", features = ["as-bytes"] }
color_quant = "1.1.0"
imagequant = "4.2.0"
exoquant = "0.2.0"
dssim = "3.2.4"

[profile.perf]
inherits = "release"
debug = true

[[bench]]
name = "dedup"
harness = false
path = "benches/dedup.rs"

[[bench]]
name = "dither"
harness = false
path = "benches/dither.rs"

[[bench]]
name = "wu"
harness = false
path = "benches/wu.rs"

[[bench]]
name = "kmeans"
harness = false
path = "benches/kmeans.rs"

[[bench]]
name = "nearest_neighbor"
harness = false
path = "benches/nearest_neighbor.rs"

[[bench]]
name = "color_space"
harness = false
path = "benches/color_space.rs"

[[bench]]
name = "pipeline"
harness = false
path = "benches/pipeline.rs"

[[package.metadata.docs.rs]]
all-features = true

[lints.rust]
future-incompatible = "warn"
keyword-idents = "warn"
let-underscore = "warn"
nonstandard-style = "warn"
refining-impl-trait = "warn"
rust-2018-idioms = "warn"
unused = "warn"
unsafe_op_in_unsafe_fn = "warn"

[lints.rustdoc]
all = "warn"

[lints.clippy]
cargo = { level = "warn", priority = -1 }
correctness = { level = "deny", priority = -1 }
complexity = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }
perf = { level = "warn", priority = -1 }
style = { level = "warn", priority = -1 }
suspicious = { level = "warn", priority = -1 }
# Debug
unimplemented = "warn"
todo = "warn"
dbg_macro = "warn"
use_debug = "warn"
# Unsafe
undocumented_unsafe_blocks = "warn"
multiple_unsafe_ops_per_block = "warn"
# Clarity
str_to_string = "warn"
string_to_string = "warn"
string_slice = "warn"
suspicious_xor_used_as_pow = "warn"
# Style
unneeded_field_pattern = "warn"
unnecessary_self_imports = "warn"
self_named_module_files = "warn"
unused_trait_names = "warn"
if_then_some_else_none = "warn"
needless_raw_strings = "warn"
precedence_bits = "warn"
ref_patterns = "warn"
semicolon_inside_block = "warn"
wildcard_enum_match_arm = "warn"
# Perf
string_lit_chars_any = "warn"
rc_buffer = "warn"
# Other
lossy_float_literal = "warn"
partial_pub_fields = "warn"
tests_outside_test_module = "warn"
# Allow some pedantic lints
many_single_char_names = "allow"
module_name_repetitions = "allow"
must_use_candidate = "allow"
semicolon_if_nothing_returned = "allow"
unreadable_literal = "allow"
